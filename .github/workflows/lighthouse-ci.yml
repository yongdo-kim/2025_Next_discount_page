name: Lighthouse CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

jobs:
  lighthouse:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Cache Lighthouse CI database
        uses: actions/cache@v3
        with:
          path: lhci.db
          key: lighthouse-db-${{ runner.os }}-${{ github.ref_name }}
          restore-keys: |
            lighthouse-db-${{ runner.os }}-
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build project
        run: npm run build
        
      - name: Start server
        run: npm run prod &
        env:
          NODE_ENV: production

      - name: Wait for server to be ready
        run: npx wait-on http://localhost:3000 --timeout 60000

      - name: Run Lighthouse collect
        run: npx lhci collect

      # - name: Run Lighthouse assert
      #   run: npx lhci assert

      - name: Display Lighthouse scores
        run: |
          echo "üö¶ Lighthouse Performance Summary"
          echo "================================="
          if [ -f ".lighthouseci/lhr-*.json" ]; then
            for file in .lighthouseci/lhr-*.json; do
              echo "üìÑ $(basename "$file")"
              node -e "
                const lhr = JSON.parse(require('fs').readFileSync('$file', 'utf8'));
                const scores = lhr.categories;
                console.log('üéØ Performance: ' + Math.round(scores.performance.score * 100));
                console.log('‚ôø Accessibility: ' + Math.round(scores.accessibility.score * 100)); 
                console.log('‚ö° Best Practices: ' + Math.round(scores['best-practices'].score * 100));
                console.log('üîç SEO: ' + Math.round(scores.seo.score * 100));
                console.log('---');
              "
            done
          fi

      - name: Upload Lighthouse reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: lighthouse-reports
          path: .lighthouseci/
          retention-days: 30
