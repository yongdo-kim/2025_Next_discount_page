name: Lighthouse CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]
  schedule:
    # 매일 오전 9시 (UTC 0시), 오후 6시 (UTC 9시)에 실행
    - cron: '0 0,9 * * *'
  workflow_dispatch: # 수동 실행 가능

jobs:
  lighthouse:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Cache Lighthouse CI database
        uses: actions/cache@v3
        with:
          path: lhci.db
          key: lighthouse-db-${{ runner.os }}-${{ github.ref_name }}
          restore-keys: |
            lighthouse-db-${{ runner.os }}-

      - name: Cache previous Lighthouse results
        uses: actions/cache@v3
        with:
          path: .lighthouse-previous
          key: lighthouse-results-${{ runner.os }}-${{ github.ref_name }}-latest
          restore-keys: |
            lighthouse-results-${{ runner.os }}-${{ github.ref_name }}-latest
            lighthouse-results-${{ runner.os }}-${{ github.ref_name }}-

      - name: Cache Lighthouse history
        uses: actions/cache@v3
        with:
          path: .lighthouse-history
          key: lighthouse-history-${{ runner.os }}-${{ github.ref_name }}
          restore-keys: |
            lighthouse-history-${{ runner.os }}-

      - name: Debug cache status and fallback to artifacts
        run: |
          echo "🔍 Checking cache restore status..."
          echo "Cache key: lighthouse-results-${{ runner.os }}-${{ github.ref_name }}-latest"
          echo "Previous results directory:"
          if [ -d ".lighthouse-previous" ]; then
            echo "✅ .lighthouse-previous directory exists (from cache)"
            ls -la .lighthouse-previous/ || echo "Directory is empty"
          else
            echo "❌ .lighthouse-previous directory not found from cache"
            echo "🔄 Attempting to restore from artifacts as fallback..."
            
            # Artifacts 백업에서 복원 시도 (실제로는 수동으로 다운로드해야 함)
            # 여기서는 첫 실행임을 알리는 메시지만 표시
            echo "ℹ️  This appears to be the first run or cache was cleared"
            echo "   Next run will have previous results to compare with"
          fi
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build project
        run: npm run build
        
      - name: Start server
        run: npm run prod &
        env:
          NODE_ENV: production

      - name: Wait for server to be ready
        run: npx wait-on http://localhost:3000 --timeout 60000

      - name: Run Lighthouse collect
        run: npx lhci collect --settings.throttling.cpuSlowdownMultiplier=4

      # - name: Run Lighthouse assert
      #   run: npx lhci assert || echo "⚠️ Some Lighthouse assertions failed, but continuing build..."

      - name: Analyze Lighthouse results and calculate averages
        run: |
          echo "🚦 Lighthouse Performance Analysis"
          echo "=================================="
          echo "📁 Checking for Lighthouse reports..."
          ls -la .lighthouseci/ || echo "❌ .lighthouseci directory not found"
          
          # 새로운 스크립트로 평균값 계산 및 비교 분석
          if ls .lighthouseci/lhr-*.json 1> /dev/null 2>&1; then
            echo "✅ Running Lighthouse results analysis..."
            node scripts/lighthouse-results.mjs
            
            echo ""
            echo "📚 Adding results to history..."
            node scripts/lighthouse-history.mjs add
            
            echo ""
            echo "📈 Showing performance trend..."
            node scripts/lighthouse-history.mjs summary
          else
            echo "❌ No Lighthouse report files found"
            echo "🔍 Available files in .lighthouseci/:"
            ls -la .lighthouseci/ 2>/dev/null || echo "Directory empty or doesn't exist"
          fi

      - name: Save current results for next comparison
        if: always()
        run: |
          echo "💾 Saving current results for next comparison..."
          
          # 현재 결과를 다음 실행을 위해 저장
          if [ -d ".lighthouse-current" ]; then
            echo "📁 Current results found:"
            ls -la .lighthouse-current/
            
            # 캐시용 복사
            rm -rf .lighthouse-previous
            cp -r .lighthouse-current .lighthouse-previous
            echo "✅ Results copied to .lighthouse-previous for cache"
            
            # 다음 실행을 위한 캐시 업데이트 확인
            echo "📊 Summary of saved results:"
            for file in .lighthouse-previous/*.json; do
              if [ -f "$file" ]; then
                echo "- $(basename "$file")"
                node -e "
                  try {
                    const data = JSON.parse(require('fs').readFileSync('$file', 'utf8'));
                    console.log('  Performance: ' + data.performance + ', Accessibility: ' + data.accessibility);
                  } catch (e) {
                    console.log('  Error reading file');
                  }
                "
              fi
            done
          else
            echo "❌ No current results directory found"
          fi

      - name: Debug directory status before upload
        if: always()
        run: |
          echo "🔍 Debugging directory status for artifacts upload..."
          echo "Current working directory: $(pwd)"
          echo "\n📁 Directory structure:"
          ls -la
          echo "\n📁 .lighthouse-current status:"
          if [ -d ".lighthouse-current" ]; then
            echo "✅ .lighthouse-current exists"
            ls -la .lighthouse-current/ || echo "Directory empty"
            find .lighthouse-current -type f | wc -l | xargs echo "Files count:"
          else
            echo "❌ .lighthouse-current does not exist"
          fi
          echo "\n📁 .lighthouseci status:"
          if [ -d ".lighthouseci" ]; then
            echo "✅ .lighthouseci exists"
            ls -la .lighthouseci/ || echo "Directory empty"
            find .lighthouseci -type f | wc -l | xargs echo "Files count:"
          else
            echo "❌ .lighthouseci does not exist"
          fi

      - name: Upload results as artifacts (backup)
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: lighthouse-results-backup-${{ github.ref_name }}
          path: |
            .lighthouse-current/
            .lighthouse-history/
            .lighthouseci/
          retention-days: 7
          if-no-files-found: warn

      - name: Upload Lighthouse reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: lighthouse-reports
          path: .lighthouseci/
          retention-days: 30
          if-no-files-found: warn
